<?xml version="1.0" encoding="UTF-8" ?>
<pmd version="1.2.0" timestamp="2012-01-15T16:39:29-03:00">
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/AsyncAgi/AsyncClientImpl.php">
    <violation beginline="53" endline="53" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$_instance'.
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Client/Impl/ClientImpl.php">
    <violation beginline="57" endline="503" rule="TooManyFields" ruleset="Code Size Rules" package="PAMI\Client\Impl" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanyfields" class="ClientImpl" priority="3">
      Too many fields
    </violation>
    <violation beginline="57" endline="503" rule="TooManyMethods" ruleset="Code Size Rules" package="PAMI\Client\Impl" externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanymethods" class="ClientImpl" priority="3">
      This class has too many methods, consider refactoring it.
    </violation>
    <violation beginline="135" endline="135" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$_outgoingQueue'.
    </violation>
    <violation beginline="178" endline="178" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id
    </violation>
    <violation beginline="204" endline="204" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id
    </violation>
    <violation beginline="216" endline="216" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id
    </violation>
    <violation beginline="412" endline="412" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Action/QueueReloadAction.php">
    <violation beginline="56" endline="66" rule="NPathComplexity" ruleset="Code Size Rules" package="PAMI\Message\Action" externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity" class="QueueReloadAction" method="__construct" priority="3">
      The method __construct() has an NPath complexity of 250.
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Action/VGSMSMSTxAction.php">
    <violation beginline="56" endline="56" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $to
    </violation>
    <violation beginline="92" endline="92" rule="ShortVariable" ruleset="Naming Rules" externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable" priority="3">
      Avoid variables with short names like $id
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Event/AsyncAGIEvent.php">
    <violation beginline="48" endline="48" rule="UnusedPrivateField" ruleset="Unused Code Rules" externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield" priority="3">
      Avoid unused private fields such as '$_envVariables'.
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Event/DongleDeviceEntryEvent.php">
    <violation beginline="46" endline="649" rule="ExcessivePublicCount" ruleset="Code Size Rules" package="PAMI\Message\Event" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivepubliccount" class="DongleDeviceEntryEvent" priority="3">
      This class has a bunch of public methods and attributes
    </violation>
    <violation beginline="46" endline="649" rule="ExcessiveClassComplexity" ruleset="Code Size Rules" package="PAMI\Message\Event" externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity" class="DongleDeviceEntryEvent" priority="3">
      The class DongleDeviceEntryEvent has an overall complexity of 60 which is very high. The configured complexity threshold is 50.
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Event/QueueMemberAddedEvent.php">
    <violation beginline="143" endline="146" rule="BooleanGetMethodName" ruleset="Naming Rules" package="PAMI\Message\Event" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="QueueMemberAddedEvent" method="getPaused" priority="4">
      The 'getPaused()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Event/QueueMemberEvent.php">
    <violation beginline="123" endline="126" rule="BooleanGetMethodName" ruleset="Naming Rules" package="PAMI\Message\Event" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="QueueMemberEvent" method="getPaused" priority="4">
      The 'getPaused()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Event/QueueMemberPausedEvent.php">
    <violation beginline="93" endline="96" rule="BooleanGetMethodName" ruleset="Naming Rules" package="PAMI\Message\Event" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="QueueMemberPausedEvent" method="getPaused" priority="4">
      The 'getPaused()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
  </file>
  <file name="/export/users/marcelog/src/sts/PAMI/src/mg/PAMI/Message/Event/QueueMemberStatusEvent.php">
    <violation beginline="133" endline="136" rule="BooleanGetMethodName" ruleset="Naming Rules" package="PAMI\Message\Event" externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname" class="QueueMemberStatusEvent" method="getPause" priority="4">
      The 'getPause()' method which returns a boolean should be named 'is...()' or 'has...()'
    </violation>
  </file>
</pmd>
