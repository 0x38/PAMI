Introduction
============

PAMI means PHP Asterisk Manager Interface. As its name suggests its just a
set of php classes that will let you issue commands to an ami and/or receive
events, using an observer-listener pattern.

The idea behind this, is to easily implement operator consoles, monitors, etc.
either via SOA or ajax.

Currently there is no manual or comprehensive documentation, so please refer
to the examples, it's really all there (I will write the documentation as
soon as possible). Please contact me if you have any comments, doubts, or
any kind of feedback. Send an email to: marcelog@gmail.com

Checkout the api (phpdoc) at: http://marcelog.github.com/PAMI/php-doc/html/index.html

You may want to take a look at Ding https://github.com/marcelog/Ding if you're
interested in using DI, AOP, and other stuff in your telephony applications.

--------------------------------------------------------------------------------
Asterisk versions supported
===========================
PAMI is tested in asterisk 1.6 versions, just because this is the version
I use in my boxes. If you need support for other versions, please contact me.

--------------------------------------------------------------------------------
Example
=======
Please see docs/examples/quickstart/example.php for a very basic example.

--------------------------------------------------------------------------------
Currently Supported Events
==========================
More events will be added with time. I can only add the ones I can test for and
use, so your contributions may make the difference! ;)

Unknown (not yet implemented) events will be reported as UnknownEvent, so you
can still catch them. If you catch one of these, please report it!

* AgentsComplete
* AGIExec
* Bridge
* ChannelUpdate
* CoreShowChannel
* CoreShowChannelComplete
* DAHDIShowChannel
* DAHDIShowChannelsComplete
* DBGetResponse
* Dial
* DTMF
* Extension
* Hangup
* Hold
* ListDialplan
* Masquerade
* NewAccountCode
* NewCallerid
* Newchannel
* Newexten
* Newstate
* ParkedCallsComplete
* PeerEntry
* PeerlistComplete
* PeerStatus
* QueueSummaryComplete
* RegistrationsComplete
* Rename
* RTCPReceived
* RTCPReceiver
* RTCPSent
* RTPReceiverStat
* RTPSenderStat
* ShowDialPlanComplete
* Status
* StatusComplete
* Transfer
* Unlink
* VarSet
* VoicemailUserEntry
* VoicemailUserEntryComplete
--------------------------------------------------------------------------------
Currently Supported Actions
===========================
* AbsoluteTimeout
* Agents
* AgentLogoff
* Atxfer (asterisk 1.8?)
* Bridge
* ChangeMonitor
* Command
* CoreSettings
* CoreShowChannels
* CoreStatus
* DAHDIDialOffHookAction
* DAHDIHangup
* DAHDIRestart
* DAHDIShowChannels
* DAHDIDNDOn
* DAHDIDNDOff
* DBGet
* DBPut
* DBDel
* DBDelTree
* ExtensionState
* CreateConfig
* GetConfig
* GetConfigJSON
* GetVar
* Hangup
* JabberSend
* LocalOptimizeAway
* Login
* Logoff
* ListCategories
* ListCommands
* MailboxCount
* MailboxStatus
* MeetmeList
* MeetmeMute
* MeetmeUnmute
* ModuleCheck
* ModuleLoad (split in ModuleLoad, ModuleUnload, and ModuleReload)
* Monitor
* Originate
* ParkedCalls
* PauseMonitor
* Ping
* PlayDTMF
* Queues
* QueueSummary
* Redirect
* Reload
* SendText
* SetVar
* ShowDialPlan
* Sipnotify
* Sippeers
* Sipqualifypeer
* Sipshowpeer
* Sipshowregistry
* Status
* StopMonitor
* UnpauseMonitor
* VoicemailUsersList
--------------------------------------------------------------------------------
Developers
==========
* build.xml is a phing build file, not ant.
* It's very possible that you may need to edit build.properties.
* Available main targets: all, build, test, report.
* Tools run: phpdoc, phploc, phpcs, phpmd, phpcpd, phpdepend, phpunit.
--------------------------------------------------------------------------------
